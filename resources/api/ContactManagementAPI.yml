openapi: 3.0.0
info:
  title: Contacts and Contact Roles API
  description: API for managing contacts and their roles in accounts, with address details.
  version: "1.0"
servers:
  - url: https://yourapi.domain.com/v1
paths:
  /contacts:
    get:
      summary: List all contacts
      operationId: listContacts
      tags:
      - Contacts
      parameters:
        - name: lastName
          in: query
          description: Filter by contact last name
          schema:
            type: string
          example: "Doe"
        - name: firstName
          in: query
          description: Filter by contact first name
          schema:
            type: string
          example: "John"
        - name: lastUpdateBefore
          in: query
          description: Filter by contacts last updated before the specified date
          schema:
            type: string
            format: date-time
          example: "2022-12-01T00:00:00Z"
        - name: lastUpdateAfter
          in: query
          description: Filter by contacts last updated after the specified date
          schema:
            type: string
            format: date-time
          example: "2022-11-01T00:00:00Z"
        - name: limit
          in: query
          description: Maximum number of contacts to return
          schema:
            type: integer
            minimum: 200
            maximum: 2000
          example: 200
        - name: sortBy
          in: query
          description: Attribute to sort the contacts by
          schema:
            type: string
            enum: [id, lastName, lastUpdateDateTime]
          example: "lastName"
        - name: sortOrder
          in: query
          description: Sort order for the results
          schema:
            type: string
            enum: [ascending, descending]
          example: "ascending"
      responses:
        '200':
          description: A list of contacts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
              examples:
                default:
                  summary: Example response of contact list
                  value:
                    - id: "cc01d7c2-aa54-4504-8b98-28bd730d51d8"
                      firstName: "John"
                      middleName: "Robert"
                      lastName: "Doe"
                      email: "john.doe@example.com"
                      phoneNumber: "123-456-7890"
                      creationDateTime: "2022-12-05T11:23:56.724Z"
                      lastUpdateDateTime: "2022-12-05T11:23:56.724Z"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new contact
      operationId: createContact
      tags:
      - Contacts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
            examples:
              default:
                summary: Example request to create a contact
                value:
                  firstName: "John"
                  middleName: "Robert"
                  lastName: "Doe"
                  email: "john.doe@example.com"
                  phoneNumber: "123-456-7890"
      responses:
        '201':
          description: The created contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
              examples:
                default:
                  summary: Example response of contact creation
                  value:
                    id: "cc01d7c2-aa54-4504-8b98-28bd730d51d8"
                    first_name: "John"
                    middleName: "Robert"
                    last_name: "Doe"
                    email: "john.doe@example.com"
                    creationDateTime: "2022-12-05T11:23:56.724Z"
                    lastUpdateDateTime: "2022-12-05T11:23:56.724Z"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /contacts/{contactId}:
    get:
      summary: Get a contact
      operationId: getContact
      tags:
      - Contacts
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A single contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
              examples:
                default:
                  summary: Example response of contact retrieval
                  value:
                    id: "cc01d7c2-aa54-4504-8b98-28bd730d51d8"
                    first_name: "John"
                    middleName: "Robert"
                    last_name: "Doe"
                    email: "john.doe@example.com"
                    creationDateTime: "2022-12-05T11:23:56.724Z"
                    lastUpdateDateTime: "2022-12-05T11:23:56.724Z"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a contact
      operationId: updateContact
      tags:
      - Contacts
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
            examples:
              default:
                summary: Example request to update a contact
                value:
                  id: "cc01d7c2-aa54-4504-8b98-28bd730d51d8"
                  first_name: "John"
                  middleName: "Robert"
                  last_name: "Doe"
                  email: "john.doe@example.com"
      responses:
        '200':
          description: The updated contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
              examples:
                default:
                  summary: Example response of contact update
                  value:
                    id: "cc01d7c2-aa54-4504-8b98-28bd730d51d8"
                    first_name: "John"
                    middleName: "Robert"
                    last_name: "Doe"
                    email: "john.doe@example.com"
                    creationDateTime: "2022-12-05T11:23:56.724Z"
                    lastUpdateDateTime: "2022-12-05T11:23:56.724Z"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a contact
      operationId: deleteContact
      tags:
      - Contacts
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No content (successful deletion)
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /contacts/{contactId}/roles:
    get:
      summary: List all roles for a contact
      operationId: listContactRoles
      tags:
      - Contact roles
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: accountId
          in: query
          description: Filter by account ID
          schema:
            type: string
            minLength: 18
            maxLength: 18
          example: "0017Q000009ZWn6QAG"
        - name: role
          in: query
          description: Filter by contact role
          schema:
            type: string
            enum: 
            - Employee
            - Contractor
            - Partner
            - Supplier
            example: "Employee"
      responses:
        '200':
          description: A list of contacts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactRole'
              examples:
                default:
                  summary: Example response of contact list
                  value:
                    - id: "a1234567-89b0-12d3-a456-426614174000"
                      accountId: "0017Q000009ZWn6QAG"
                      contactRole: "Employee"
                      creationDateTime: "2022-12-05T11:23:56.724Z"
                      lastUpdateDateTime: "2022-12-07T14:35:00.000Z"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add a role to a contact
      operationId: createContactRole
      tags:
      - Contact roles
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRole'
            examples:
              default:
                summary: Example request to create a contact role
                value:
                  accountId: "0017Q000009ZWn6QAG"
                  contactRole: "Employee"
      responses:
        '201':
          description: The created contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactRole'
              examples:
                default:
                  summary: Example response of contact role creation
                  value:
                    id: "a1234567-89b0-12d3-a456-426614174000"
                    accountId: "0017Q000009ZWn6QAG"
                    contactRole: "Employee"
                    creationDateTime: "2022-12-05T11:23:56.724Z"
                    lastUpdateDateTime: "2022-12-07T14:35:00.000Z"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /contacts/{contactId}/roles/{roleId}:
    get:
      summary: Get a contact role
      operationId: getContactRole
      tags:
      - Contact roles
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: roleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A single contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactRole'
              examples:
                default:
                  summary: Example response of contact role retrieval
                  value:
                    id: "a1234567-89b0-12d3-a456-426614174000"
                    accountId: "0017Q000009ZWn6QAG"
                    contactRole: "Employee"
                    creationDateTime: "2022-12-05T11:23:56.724Z"
                    lastUpdateDateTime: "2022-12-07T14:35:00.000Z"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a contact role
      operationId: updateContactRole
      tags:
      - Contact roles
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: roleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRole'
            examples:
              default:
                summary: Example request to update a contact role
                value:
                  id: "a1234567-89b0-12d3-a456-426614174000"
                  accountId: "0017Q000009ZWn6QAG"
                  contactRole: "Employee"
      responses:
        '200':
          description: The updated contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactRole'
              examples:
                default:
                  summary: Example response of contact role update
                  value:
                    id: "a1234567-89b0-12d3-a456-426614174000"
                    accountId: "0017Q000009ZWn6QAG"
                    contactRole: "Employee"
                    creationDateTime: "2022-12-05T11:23:56.724Z"
                    lastUpdateDateTime: "2022-12-07T14:35:00.000Z"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a contact role
      operationId: deleteContactRole
      tags:
      - Contact roles
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: roleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No content (successful deletion)
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
components:
  schemas:
    Contact:
      type: object
      required:
        - firstName
        - lastName
        - email
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the contact.
          example: "cc01d7c2-aa54-4504-8b98-28bd730d51d8"
        firstName:
          type: string
          description: The first name of the contact.
          minLength: 1
          maxLength: 100
          example: "John"
        middleName:
          type: string
          description: The middle name of the contact.
          minLength: 1
          maxLength: 100
          example: "Robert"
        lastName:
          type: string
          description: The last name of the contact.
          minLength: 1
          maxLength: 100
          example: "Doe"
        email:
          type: string
          description: The email address of the contact.
          format: email
          example: "john.doe@example.com"
        phoneNumber:
          type: string
          description: The phone number of the contact.
          example: "123-456-7890"
        creationDateTime:
          type: string
          format: date-time
          description: The timestamp the contact was created.
          example: "2022-12-05T11:23:56.724Z"
        lastUpdateDateTime:
          type: string
          format: date-time
          description: The timestamp the contact was last updated.
          example: "2022-12-07T14:35:00.000Z"
    ContactRole:
      type: object
      required:
        - account_id
        - contact_role
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the contact role.
          example: "a1234567-89b0-12d3-a456-426614174000"
        accountId:
          type: string
          minLength: 18
          maxLength: 18
          description: The ID of the account associated with the contact.
          example: "0017Q000009ZWn6QAG"
        contactRole:
          type: string
          description: The role of the contact within the account.
          enum: 
          - Employee
          - Contractor
          - Partner
          - Supplier
          example: "Employee"
        creationDateTime:
          type: string
          format: date-time
          description: The timestamp the contact role was created.
          example: "2022-12-05T11:23:56.724Z"
        lastUpdateDateTime:
          type: string
          format: date-time
          description: The timestamp the contact role was last updated.
          example: "2022-12-07T14:35:00.000Z"
    Error:
      type: object
      required:
        - message
      properties:
        Exception:
          type: string
          description: Error message detailing what went wrong.
          maxLength: 1000
          example: "Internal server error"
        Code:          
          type: string
          description: HTTP status code associated to the error.
          minLength: 3
          maxLength: 3
          example: "500"          
        TransactionId:
          type: string
          description: A unique identifier for the transaction, for debugging.
          maxLength: 50
          example: "APIGW:e632bb5e-bf09-473e-958c-0f2cc202bf42:621"
